{"version":3,"sources":["Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","currencies.js","Form/styled.js","Form/index.js","Footer/styled.js","Footer/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Result/styled.js","Result/index.js","App.js","reportWebVitals.js","background-calculator.png","GlobalStyle.js","index.js"],"names":["StyledContainer","styled","main","Container","children","StyledHeader","header","Header","title","currencies","short","rate","StyledForm","form","StyledFieldset","fieldset","StyledSelect","select","StyledInput","input","StyledLabel","label","StyledButton","button","StyledFlex","div","Form","calculateResult","setResult","useState","currency","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","step","min","max","placeholder","type","required","map","onClick","StyledFooter","footer","Footer","StyledClock","p","dateFormat","date","toLocaleDateString","weekday","hour","minute","second","day","month","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","StyledResult","Result","result","targetAmount","toFixed","App","find","sourceAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","img","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c56a65d3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n  background-color: whitesmoke;\r\n  border-radius: 25px;\r\n  box-shadow: 10px 10px 13px -7px #777576;\r\n  max-width: 480px;\r\n  padding: 15px;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: bold;\r\n  margin: 5px;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 12px -9px #000000;\r\n`;\r\n","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <StyledHeader>\r\n    <h1>{title}</h1>\r\n  </StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","export const currencies = [\r\n  {\r\n    short: \"USD\",\r\n    rate: 3.8797,\r\n  },\r\n  {\r\n    short: \"EUR\",\r\n    rate: 4.5691,\r\n  },\r\n  {\r\n    short: \"CHF\",\r\n    rate: 4.2602,\r\n  },\r\n  {\r\n    short: \"GBP\",\r\n    rate: 5.3571,\r\n  },\r\n  {\r\n    short: \"RUB\",\r\n    rate: 0.0528,\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  margin-top: 20px;\r\n  font-family: \"Lato\", sans-serif;\r\n`;\r\n\r\nexport const StyledFieldset = styled.fieldset`\r\n  border-radius: 5px 10px;\r\n  margin: 20px 0px;\r\n  background-color: rgb(245, 245, 245);\r\n  font-size: smaller;\r\n`;\r\n\r\nexport const StyledSelect = styled.select`\r\n  padding: 10px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n`;\r\nexport const StyledInput = styled.input`\r\n  padding: 10px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n\r\n  &:required {\r\n    border-color: rgb(224, 107, 107);\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: 1px black solid;\r\n  background-color: rgb(255, 254, 254);\r\n  box-shadow: 5px 5px 12px -9px #000000;\r\n  padding: 10px;\r\n  max-width: 300px;\r\n  margin-top: 5px;\r\n\r\n  &:hover {\r\n    background-color: rgb(129, 126, 127);\r\n    color: lavenderblush;\r\n  }\r\n`;\r\n\r\nexport const StyledFlex = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { StyledButton, StyledFieldset, StyledFlex, StyledForm, StyledInput, StyledLabel, StyledSelect } from \"./styled\";\r\n\r\nexport const Form = ({ calculateResult, setResult }) => {\r\n  const [currency, setCurrency] = useState(currencies[0].short);\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  };\r\n\r\n  const onClickReset = (event) => {\r\n    event.preventDefault();\r\n    setAmount(\"\");\r\n    setResult();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onSubmit}>\r\n      <StyledFieldset>\r\n        <StyledLabel>\r\n          <p>Amount in PLN*:</p>\r\n          <StyledInput\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n            step=\"any\"\r\n            min=\"1\"\r\n            max=\"1000000000\"\r\n            placeholder=\"Enter the amount in PLN\"\r\n            type=\"number\"\r\n            required\r\n          />\r\n        </StyledLabel>\r\n        <StyledLabel>\r\n          <p>Currency</p>\r\n          <StyledSelect\r\n            value={currency}\r\n            onChange={({ target }) => setCurrency(target.value)}\r\n          >\r\n            {currencies.map((currency) => (\r\n              <option key={currency.short} value={currency.short}>\r\n                {currency.short}\r\n              </option>\r\n            ))}\r\n          </StyledSelect>\r\n        </StyledLabel>\r\n      </StyledFieldset>\r\n      <StyledFlex>\r\n        <StyledButton type=\"submit\">Calculate</StyledButton>\r\n        <StyledButton type=\"reset\" onClick={onClickReset}>\r\n          Clear form\r\n        </StyledButton>\r\n      </StyledFlex>\r\n    </StyledForm>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  padding: 10px;\r\n  font-family: \"Lato\", sans-serif;\r\n  font-style: bold;\r\n  margin-top: 20%;\r\n  color: rgb(0, 0, 0);\r\n`;\r\n","import { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = ({ title }) => (\r\n    <StyledFooter>\r\n        {title}\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n  font-family: monospace;\r\n  text-align: right;\r\n  color: gray;\r\n  margin-right: 6px;\r\n`;\r\n","import { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst dateFormat = (date) =>\r\n  date.toLocaleDateString(\"en-GB\", {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return <StyledClock>Today is {dateFormat(date)}</StyledClock>;\r\n};\r\n\r\nexport default Clock;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n  height: 40px;\r\n  text-align: center;\r\n  margin-top: 50px;\r\n`;\r\n","import { StyledResult } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => (\r\n  <StyledResult>\r\n    {result && (\r\n      <>\r\n        <strong>\r\n          You receive&nbsp;\r\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n        </strong>\r\n      </>\r\n    )}\r\n  </StyledResult>\r\n);\r\n\r\nexport default Result;","import { useState } from \"react\";\r\nimport Container from \"./Container\";\r\nimport Header from \"./Header\";\r\nimport { Form } from \"./Form\";\r\nimport Footer from \"./Footer\";\r\nimport Clock from \"./Clock\";\r\nimport Result from \"./Result\";\r\nimport { currencies } from \"./currencies\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Currency Calculator\" />\r\n      <Clock />\r\n      <Form calculateResult={calculateResult} setResult={setResult} />\r\n      <Result result={result} />\r\n      <Footer title=\"Copyright 2021 by Malgorzata Ras. All rights reserved.\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/background-calculator.6eb90087.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport img from \"./background-calculator.png\"\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n     }\r\n  \r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  #root {\r\n    background-size: cover;\r\n    background-image: url(${img});\r\n    background-position: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n  }`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {GlobalStyle} from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}